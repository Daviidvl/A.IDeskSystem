// src/lib/aiResponses.ts
import OpenAI from "openai";

const client = new OpenAI({
  apiKey: import.meta.env.VITE_OPENAI_API_KEY,
  dangerouslyAllowBrowser: true, // necess√°rio no Vite
});

// üîπ contador de tentativas por ticket (persistente no navegador)
const attemptCount: Record<string, number> = JSON.parse(
  localStorage.getItem("aiAttempts") || "{}"
);

const saveAttempts = () => {
  localStorage.setItem("aiAttempts", JSON.stringify(attemptCount));
};

export async function getAIResponse(ticketId: string, userMessage: string) {
  // Inicializa o contador caso ainda n√£o exista
  if (!attemptCount[ticketId]) attemptCount[ticketId] = 0;

  // Se j√° tentou 3 vezes, envia pro t√©cnico
  if (attemptCount[ticketId] >= 3) {
    return {
      text: "N√£o consegui resolver por aqui. Estou encaminhando o caso para um t√©cnico humano. üßë‚Äçüîß",
      requiresHuman: true,
    };
  }

  try {
    // üîÅ Incrementa tentativa e salva
    attemptCount[ticketId]++;
    saveAttempts();
    console.log(`üîÅ Tentativa da IA (${ticketId}):`, attemptCount[ticketId]);

    // üí¨ Chamada √† OpenAI
    const completion = await client.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content:
            "Voc√™ √© um assistente t√©cnico virtual do sistema A.I Desk. Sua fun√ß√£o √© tentar resolver o problema do cliente em at√© 3 mensagens. Se o problema n√£o for resolvido, avise que o chamado ser√° encaminhado para um t√©cnico humano.",
        },
        {
          role: "user",
          content: userMessage,
        },
      ],
      max_tokens: 200,
      temperature: 0.7,
    });

    const aiText = completion.choices[0]?.message?.content?.trim() || "Desculpe, n√£o consegui gerar uma resposta.";

    // üîö Verifica se precisa encaminhar para o t√©cnico
    const requiresHuman =
      attemptCount[ticketId] >= 3 ||
      /encaminhar|t√©cnico|humano|n√£o consigo/i.test(aiText);

    return { text: aiText, requiresHuman };
  } catch (error) {
    console.error("Erro na IA:", error);
    return {
      text: "Ocorreu um erro ao tentar processar sua solicita√ß√£o. Encaminhando para um t√©cnico humano.",
      requiresHuman: true,
    };
  }
}

